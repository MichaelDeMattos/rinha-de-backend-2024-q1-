version: "3.1"

services:
  api_rinha_backend_master: &instance_a
      container_name: api_instance_a
      ulimits:
        nofile:
          soft: 100000
          hard: 100000
      build:
        context: .
        dockerfile: Dockerfile
      volumes:
        - ./src:/home/foo/rinha-de-backend-2024-q1/src
      ports:
        - '127.0.0.1:8000:8000'
      env_file:
        - .env
      environment:
        INSTANCE_BIND: "127.0.0.1:8000"
        INSTANCE_WORKERS: "1"
        INSTANCE_NAME: "api_instance_a"
      depends_on:
        - postgres_db
      network_mode: "host"

  api_rinha_backend_slave:
    <<: *instance_a
    container_name: api_instance_b
    ports:
      - '127.0.0.1:8001:8001'
    environment:
      INSTANCE_BIND: "127.0.0.1:8001"
      INSTANCE_WORKERS: "1"
      INSTANCE_NAME: "api_instance_b"

  postgres_db:
    container_name: postgres_db
    image: postgres:15-alpine
    restart: always
    env_file:
      - .env
    logging:
      driver: none
    ulimits:
      nofile:
        soft: 100000
        hard: 100000
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: GMT-3
    volumes:
      - ./migrate.sql:/docker-entrypoint-initdb.d/migrate.sql
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready --dbname=${POSTGRES_DB} --username=${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 20
    network_mode: "host"

  nginx_server:
    container_name: nginx_server
    restart: always
    image: nginx:1.25.4-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ulimits:
      nofile:
        soft: 100000
        hard: 100000
    ports:
      - target: 9999
        published: 9999
        protocol: tcp
        mode: host
    environment:
      - TZ=America/Sao_Paulo
      - DEBIAN_FRONTEND=noninteractive
    network_mode: "host"
