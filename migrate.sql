CREATE UNLOGGED TABLE IF NOT EXISTS POSICAO_CLIENTE (
    CLIENTE_ID INTEGER NOT NULL,
    CLIENTE_LIMITE INTEGER NOT NULL,
    SALDO_LIMITE INTEGER NOT NULL CHECK (SALDO_LIMITE >= 0),
    SALDO_TOTAL INTEGER NOT NULL,
    PRIMARY KEY(CLIENTE_ID)
);

CREATE UNLOGGED TABLE IF NOT EXISTS EXTRATO_CLIENTE (
    DESCRICAO VARCHAR(10) NOT NULL,
    TIPO CHAR(1) CHECK (TIPO IN ('c', 'd')),
    VALOR INTEGER NOT NULL,
    REALIZADA_EM TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CLIENTE_ID INTEGER NOT NULL,
    CONSTRAINT FK_POSICAO_CLIENTE_CLIENTE_ID
		FOREIGN KEY(CLIENTE_ID)
		REFERENCES POSICAO_CLIENTE(CLIENTE_ID)
);

CREATE INDEX IF NOT EXISTS IDX_EXTRATO_CLIENTE_ID ON EXTRATO_CLIENTE (CLIENTE_ID);
CREATE INDEX IF NOT EXISTS IDX_POSICAO_CLIENTE_ID ON POSICAO_CLIENTE (CLIENTE_ID);

CREATE OR REPLACE FUNCTION INSERT_CREDIT(ClientID INT, TransValor INT, TransDesc VARCHAR(10), TransRefDate TIMESTAMP)
RETURNS JSON
AS $$
DECLARE
    VAR_SALDO_LIMITE INT;
    VAR_SALDO_TOTAL INT;
BEGIN
    UPDATE POSICAO_CLIENTE
	SET SALDO_TOTAL = SALDO_TOTAL + TransValor,
		SALDO_LIMITE =
		    CASE WHEN (SALDO_LIMITE + TransValor) < CLIENTE_LIMITE THEN SALDO_LIMITE + TransValor ELSE CLIENTE_LIMITE END
    WHERE CLIENTE_ID = ClientID RETURNING SALDO_LIMITE, SALDO_TOTAL INTO VAR_SALDO_LIMITE, VAR_SALDO_TOTAL;

    -- INSERIR MOVIMENTAÇÃO
    INSERT INTO EXTRATO_CLIENTE
        (DESCRICAO, TIPO, VALOR, CLIENTE_ID, REALIZADA_EM)
    VALUES
        (TransDesc, 'c', TransValor, ClientID, TransRefDate);
    RETURN json_build_object(
        'limite', VAR_SALDO_LIMITE,
        'saldo', VAR_SALDO_TOTAL
    );
END;
$$ LANGUAGE plpgsql;


CREATE OR REPLACE FUNCTION INSERT_DEBIT(ClientID INT, TransValor INT, TransDesc VARCHAR(10))
RETURNS JSON
AS $$
DECLARE
    VAR_SALDO_LIMITE INT;
    VAR_SALDO_TOTAL INT;
    VAR_CLIENTE_LIMITE INT;
BEGIN
    -- OBTER POSICAO ATUAL
    SELECT
            CLIENTE_LIMITE,
            SALDO_LIMITE,
            SALDO_TOTAL
        INTO
            VAR_CLIENTE_LIMITE,
            VAR_SALDO_LIMITE,
            VAR_SALDO_TOTAL
    FROM POSICAO_CLIENTE
    WHERE CLIENTE_ID = ClientID;

    -- VERIFICAR LIMITE ULTRAPASSADO
    IF (ABS(VAR_SALDO_TOTAL + TransValor) > VAR_CLIENTE_LIMITE) THEN
        RETURN json_build_object();
    ELSE
        -- ATUALIZAR POSIÇÃO
        UPDATE POSICAO_CLIENTE
        SET SALDO_TOTAL = SALDO_TOTAL + TransValor,
            SALDO_LIMITE = CASE WHEN (SALDO_TOTAL + TransValor) < 0 then SALDO_LIMITE +  TransValor ELSE SALDO_LIMITE END
        WHERE CLIENTE_ID = ClientID;

        -- JSON
        RETURN json_build_object(
            'limite', VAR_SALDO_LIMITE + TransValor,
            'saldo', VAR_SALDO_TOTAL + TransValor);

    END IF;
END;
$$ LANGUAGE plpgsql;
